name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4

    - run: dotnet build --configuration Release

    # Only preserve the test binaries, no dotnet publish for each framework
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: artifacts/bin/RichardJM.Coverlet.Tests

  test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        # To ensure the path doesn't match the build path
        working-directory: test-subfolder

    steps:
    # Have the source files from the repo for instrumentation
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: test-subfolder

    # Only the binaries for the tests are needed
    - name: Download test artifacts
      uses: actions/download-artifact@v4
      with:
        name: test-artifacts
        path: test-subfolder/artifacts/bin/RichardJM.Coverlet.Tests

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: test-subfolder/global.json

    # In order to get coverlet available to run we need to install it via restore
    - run: dotnet restore

    # No build required - this is the key requirement so I test the compiled binaries from the previous job
    - run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory artifacts/TestResults
    
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.3
      with:
        reports: test-subfolder/artifacts/TestResults/**/coverage.cobertura.xml
        targetdir: test-subfolder/artifacts/TestResults
  
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-subfolder/artifacts/TestResults
